{"version":3,"sources":["stores/TodoModel.js","stores/TodoStore.js","components/TodoEntry.js","components/TodoItem.js","components/TodoItems.js","components/Clear.js","components/TodoBottom.js","App.js","serviceWorker.js","index.js"],"names":["TodoMoodel","store","title","completed","id","destroy","Object","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","observable","action","todoStore","lastId","todos","todosA","push","TodoModel","forEach","todo","myid","remove","_this","autorun","filter","_this2","_this3","_this4","_loop","_i","i","length","TodoEntry","observer","state","value","handleKeyDown","event","keyCode","preventDefault","document","getElementById","placeholder","TodoStore","addTodo","setState","react_default","a","createElement","className","onChange","target","onKeyDown","type","Component","TodoItem","props","possibleConstructorReturn","getPrototypeOf","call","onToggle","toggle","destroyFunc","bind","assertThisInitialized","removeTodo","checked","onClick","TodoItems","map","components_TodoItem","Clear","clear","TodoBottom","active","complete","all","selectedAll","selectedActive","selectedComplete","All","Active","Complete","components_Clear","App","components_TodoEntry","components_TodoItems","components_TodoBottom","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d3dd8a7.chunk.js","sourcesContent":["import { observable, action } from \"mobx\";\n\nexport default class TodoMoodel {\n  \n  store;\n  id;\n  @observable\n  title;\n  @observable\n  completed;\n  @observable\n  destroy;\n  constructor(store, title, completed, id, destroy) {\n    this.title = title;\n    this.completed = completed;\n    this.id = id;\n    this.store = store;\n    this.destroy = destroy;\n  }\n  @action\n  toggle() {\n    this.completed = !this.completed;\n  }\n\n \n}\n","import { action, observable, autorun } from \"mobx\";\nimport TodoModel from \"./TodoModel\";\n\nclass TodoStore {\n  @observable\n  todos = [];\n  lastId = 0;\n\n  @observable\n  todosA = [];\n\n  @action\n  addTodo(title) {\n    this.todos = this.todosA;\n    this.todos.push(new TodoModel(this, title, false, this.lastId++, false));\n\n    this.todosA = this.todos;\n    this.todosA.forEach(todo => {\n    });\n  }\n\n  @action\n  \n  removeTodo(myid) {\n    this.todosA.remove(this.todosA[myid]);\n    this.lastId = this.lastId - 1;\n    this.todosA.forEach(todo => {\n      if (todo.id > myid) {\n        todo.id = todo.id - 1;\n      } else if (todo.id < myid) {\n        todo.id = todo.id;\n      }\n    });\n\n\n    this.todos = this.todosA;\n  }\n\n  @action\n  All() {\n    autorun(() => {\n      this.todos = this.todosA.filter(todo => todo.completed !== \"\");\n    });\n  }\n  @action\n  Active() {\n    autorun(() => {\n      this.todos = this.todosA.filter(todo => todo.completed === false);\n    });\n  }\n\n  @action\n  Complete() {\n    autorun(() => {\n      this.todos = this.todosA.filter(todo => todo.completed === true);\n    });\n  }\n\n  @action\n  Clear() {\n    for (let i = 0; i < this.todosA.length; i++) {\n      if (this.todosA[i].completed === true) {\n        this.todosA.remove(this.todosA[i]);\n        this.todosA.forEach(todo => {\n          if (todo.id > i) {\n            todo.id = todo.id - 1;\n          } else if (todo.id < i) {\n            todo.id = todo.id;\n          }\n        });\n        this.lastId--;\n        i--;\n      }\n    }\n\n    this.todos = this.todosA;\n  }\n\n\n}\nconst todoStore = new TodoStore();\nexport default todoStore;\n","import React, { Component } from \"react\";\nimport TodoStore from '../stores/TodoStore';\nimport {observer} from 'mobx-react';\n\n@observer\nclass TodoEntry extends Component {\n  state = {\n    value: \" \"\n  };\n  handleKeyDown=event=>{\n    if(event.keyCode  !==13){\n      return;\n    }\n    event.preventDefault();\n    document.getElementById('place').placeholder=\"What needs to be done?\" ;\n    TodoStore.addTodo(this.state.value)\n    this.setState({\n      value:''\n    })  \n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todo</h1>\n        <input id='place'\n          onChange={event => this.setState({ value: event.target.value})}\n          onKeyDown={\n            event=>this.handleKeyDown(event)\n          }\n          value={this.state.value}\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </header>\n    );\n  }\n}\nexport default TodoEntry\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport todoStore from \"../stores/TodoStore\";\n\n\n@observer\nclass TodoItem extends Component {\n \n\n  onToggle = () => {\n    this.props.todo.toggle();\n  };\n\n  constructor(props) {\n    super(props);\n    \n    this.destroyFunc = this.destroyFunc.bind(this);\n  }\n  destroyFunc() {\n    \n    todoStore.removeTodo(this.props.todo.id);\n  }\n  render() {\n    const { todo } = this.props;\n\n    return (\n      <li className={todo.completed ? \"completed\" : \" \"}>\n        <div className=\"view\">\n          <input\n            onChange={this.onToggle}\n            type=\"checkbox\"\n            className=\"toggle\"\n            value=\"on\"\n            checked={todo.completed}\n          />\n          <label>{todo.title}</label>\n\n          <button className=\"destroy\" onClick={this.destroyFunc} />\n        </div>\n      </li>\n    );\n  }\n}\nexport default TodoItem;\n","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport todoStore from \"../stores/TodoStore\";\nimport { observer } from \"mobx-react\";\n\n@observer\nclass TodoItems extends Component {\n\n  render() {\n    return (\n      <section className=\"main\">\n\n     \n\n        <ul className=\"todo-list\">\n          {todoStore.todos.map(todo => {\n            return <TodoItem todo={todo} />;\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\nexport default TodoItems;\n","import React, { Component } from \"react\";\nimport todoStore from \"../stores/TodoStore\";\nimport { observer } from \"mobx-react\";\n\n@observer\nclass Clear extends Component {\n  constructor(props) {\n      super(props)\n    this.clear = this.clear.bind(this);\n  }\n  clear() {\n    todoStore.Clear();\n      }\n  render() {\n    if (todoStore.todosA.filter(todo => todo.completed === true).length>0) {\n      return (\n        <a onClick={this.clear} className=\"clear-completed\">\n          Clear completed\n        </a>\n      );\n    } else {\n      return null;\n    }\n  }\n}\nexport default Clear","import Clear from \"./Clear\";\nimport React, { Component } from \"react\";\nimport todoStore from \"../stores/TodoStore\";\nimport { observer } from \"mobx-react\";\n\n\n@observer\nclass TodoBottom extends Component {\n  constructor(props) {\n    super(props);\n    this.active = this.active.bind(this);\n    this.complete = this.complete.bind(this);\n    this.all = this.all.bind(this);\n   \n\n    this.state = {\n      \n      selectedAll: true,\n      selectedActive: false,\n      selectedComplete: false\n    };\n  }\n  all() {\n    this.setState({\n      selectedAll: true,\n      selectedActive: false,\n      selectedComplete: false\n    });\n    todoStore.All();\n  }\n  active() {\n    this.setState({\n      selectedAll: false,\n      selectedActive: true,\n      selectedComplete: false\n    });\n    todoStore.Active();\n  }\n  complete() {\n    this.setState({\n      selectedAll: false,\n      selectedActive: false,\n      selectedComplete: true\n    });\n    todoStore.Complete();\n  }\n \n\n  render() {\n  \n    if (todoStore.todosA.length > 0) {\n      return (\n        <div className=\"footer\">\n          <button className=\"todo-count\">\n            <span>\n              {todoStore.todosA.filter(todo => todo.completed === false).length}\n            </span>\n            <strong> items left</strong>\n          </button>\n          <ul className=\"filters\">\n            <li onClick={this.all}>\n              <button>\n                <a className={this.state.selectedAll ? \"selected\" : \" \"}>\n                  {\" \"}\n                  All\n                </a>\n              </button>\n            </li>\n         \n            <li onClick={this.active}>\n              <button type=\"submit\">\n                <a className={this.state.selectedActive ? \"selected\" : \" \"}>\n                  {\" \"}\n                  Active\n                </a>\n              </button>\n            </li>\n           \n            <li onClick={this.complete}>\n              <button type=\"submit\">\n                <a className={this.state.selectedComplete ? \"selected\" : \" \"}>\n                  Completed\n                </a>\n              </button>\n            </li>\n         \n          </ul>\n          <Clear />\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\nexport default TodoBottom;\n","import React, { Component } from \"react\";\nimport TodoEntry from \"./components/TodoEntry\";\nimport TodoItms from \"./components/TodoItems\";\nimport TodoBottom from \"./components/TodoBottom\";\nimport { observer } from \"mobx-react\";\n\n@observer\nclass App extends Component {\n  \n  render() {\n    return (\n      <div id=\"todoapp\" className=\"todoapp\">\n        <TodoEntry />\n        <TodoItms />\n        <TodoBottom />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}